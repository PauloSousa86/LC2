MODULE main

VAR
	state : {Far, Near, Past};
	event : {idle, approach, exit};
	x : -200..3000;
	control : controller(event);
	
ASSIGN
	init(x) := 3000; init(state) := Far; init(event) := idle;
	next(state) := case
		state = Far & x <= 1000 : Near;
		state = Near & x <= 0 : Past;
		state = Past & x <= -100 : Far;
		TRUE : state;
		esac;

	next(event) := case
		state = Far & x <= 1000 : approach;
		state = Past & x <= -100 : exit;
		TRUE : event;
		esac;

	next(x) := case
		x <= -100 : 2900;
		state = Far : x - 40;
		state = Near : x - 30;
		state = Past : x - 30;
		TRUE : x;
		esac;

SPEC AG (( x = 0) -> (control.gate.state = Closed & control.gate.y =0))

MODULE controller(event)
VAR
	action : {idle, lower, raise};
	state : {idle, raising, lowering};
	gate : gate(action);
	z : 0..6;
	u : 0..5;
ASSIGN
	init(state) := idle; init(z) := 0; init(u) := 4; init(action) := idle;
	next(state) := case
		(state = lowering | state = raising) & z >= u : idle;
		event = approach : lowering;
		event = exit : raising;
		TRUE : state;
		esac;

	next(z) := case
		(state = lowering | state = raising) & z < u : z + 1;
		(state = lowering | state = raising) & z >= u : 0;
		TRUE : z;
		esac;

	next(u) := u;

	next(action) := case
		event = approach & z >= u : lower;
		event = exit & z >= u : raise;
		TRUE : action;
		esac;
MODULE gate(event)
VAR
	state : {Open, MoveUp, MoveDown, Closed};
	y : -90..190;
ASSIGN
	init(y) := 90;
	init(state) := Open;

	next(state) := case
		state = Open & event = lower : MoveDown;
		state = Open & event = raise : Open;
		state = MoveUp & y = 90 : Open;
		state = MoveUp & event = lower : MoveDown;
		state = MoveUp & y < 90 & event = raise : MoveUp;
		state = MoveDown & y = 0 : Closed;
		state = MoveDown & y > 0 & event = lower : MoveDown;
		state = MoveDown & event = raise : MoveUp;
		state = Closed & event = lower : Closed;
		state = Closed & event = raise : MoveUp;
		TRUE : state;
		esac;

	next(y) := case
		y > 90 : 90;
		y < 0 : 0;
		state = Open : 90;
		state = Closed : 0;
		state = MoveDown : y - 9;
		state = MoveUp : y + 9;
		TRUE : y;
		esac;
